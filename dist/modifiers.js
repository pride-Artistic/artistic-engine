!function(t,e){if("object"==typeof exports&&"object"==typeof module)module.exports=e();else if("function"==typeof define&&define.amd)define([],e);else{var s=e();for(var i in s)("object"==typeof exports?exports:t)[i]=s[i]}}(self,(()=>(()=>{"use strict";var t={d:(e,s)=>{for(var i in s)t.o(s,i)&&!t.o(e,i)&&Object.defineProperty(e,i,{enumerable:!0,get:s[i]})},o:(t,e)=>Object.prototype.hasOwnProperty.call(t,e),r:t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})}},e={};t.r(e),t.d(e,{EaseFunctions:()=>n,Modifiers:()=>s});var s={};t.r(s),t.d(s,{ConcurrentModifier:()=>r,Modifier:()=>i,SequentialModifier:()=>o});class i{constructor(t,e,s,i,r){if(this.startTime=0,this.elapsedTime=0,Number.isNaN(t)||Math.abs(t)===1/0)throw new Error(t+"is not a valid  parameter for 'from' parameter.");if(Number.isNaN(e)||Math.abs(e)===1/0)throw new Error(e+"is not a valid  parameter for 'to' parameter.");if(Number.isNaN(s)||Math.abs(s)===1/0||s<=0)throw new Error(s+"is not a valid  parameter for 'duration' parameter.");this.from=t,this.diff=e-t,this.duration=s,this.modifyFunction=i,this.easeFunction=null!=r?r:t=>t}get Progress(){return this.elapsedTime/this.duration}get EndTime(){return this.duration-this.elapsedTime}register(t=0){this.startTime=Date.now()+t,this.elapsedTime=0}tick(){this.elapsedTime=Date.now()-this.startTime,this.modify(this.from+this.easeFunction(Math.min(this.Progress,1))*this.diff)}modify(t){this.modifyFunction(t)}}class r extends i{constructor(t,...e){super(0,1,1,(()=>{})),this.modifiers=[t,...e]}get Progress(){return 0===this.modifiers.length?1:0}register(){for(const t of this.modifiers)t.register()}tick(){if(1!==this.Progress)for(const t of this.modifiers)t.Progress<1?t.tick():this.modifiers=this.modifiers.filter((e=>e===t))}}class o extends i{constructor(t,...e){super(0,1,1,(()=>{})),this.modifiers=[t,...e]}get Progress(){return 0===this.modifiers.length?1:0}register(){this.modifiers[0].register()}tick(){var t;if(1===this.Progress)return;const e=this.modifiers[0];if(e.Progress<1)e.tick();else{const e=this.modifiers.shift();null===(t=this.modifiers[0])||void 0===t||t.register(null==e?void 0:e.EndTime)}}}const a=t=>{const e=2.75,s=2.75*t;return 7.5625*(s<1?t*t:s<2?(t-=1.5/e)*t+.75:s<2.5?(t-=2.25/e)*t+.9375:(t-=2.625/e)*t+.984375)},n={EaseInSine:t=>1-Math.cos(t*Math.PI/2),EaseOutSine:t=>Math.sin(t*Math.PI/2),EaseInOutSine:t=>-(Math.cos(Math.PI*t)-1)/2,EaseInExpo:t=>0===t?0:Math.pow(2,10*t-10),EaseOutExpo:t=>1===t?1:1-Math.pow(2,-10*t),EaseInOutExpo:t=>0===t?0:1===t?1:t<.5?Math.pow(2,20*t-10)/2:(2-Math.pow(2,-20*t+10))/2,EaseInCirc:t=>1-Math.sqrt(1-Math.pow(t,2)),EaseOutCirc:t=>Math.sqrt(1-Math.pow(t-1,2)),EaseInOutCirc:t=>t<.5?(1-Math.sqrt(1-Math.pow(2*t,2)))/2:(Math.sqrt(1-Math.pow(-2*t+2,2))+1)/2,EaseInBack:t=>Math.pow(t,2)*(2.70158*t-1.70158),EaseOutBack:t=>1+Math.pow(t-1,2)*(2.70158*(t-1)+1.70158),EaseInOutBack:t=>(t<.5?Math.pow(2*t,2)*(7.189819*t-2.5949095):Math.pow(2*t-2,2)*(3.5949095*(2*t-2)+2.5949095)+2)/2,EaseInElastic:t=>0===t?0:1===t?1:-Math.pow(2,10*t-10)*Math.sin((10*t-10.75)*(2*Math.PI)/3),EaseOutElastic:t=>0===t?0:1===t?1:Math.pow(2,-10*t)*Math.sin((10*t-.75)*(2*Math.PI)/3)+1,EaseInOutElastic:t=>0===t?0:1===t?1:t<.5?-Math.pow(2,20*t-10)*Math.sin((20*t-11.125)*(2*Math.PI)/4.5)/2:Math.pow(2,-20*t+10)*Math.sin((20*t-11.125)*(2*Math.PI)/4.5)/2+1,EaseInBounce:t=>1-a(1-t),EaseOutBounce:a,EaseInOutBounce:t=>t<.5?(1-a(1-2*t))/2:(1+a(2*t-1))/2};return e})()));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,